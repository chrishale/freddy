/* 
  When Mixin
  ----------
  A mixin for selecting css with conditions.
  
  Arguments:
  ----------
  $conditions: (list of conditions)
    - Here you can pass in any of the following:
      > Breakpoint key, taken from the $breakpoints list. e.g. small
      > Media query as a string. e.g. "(max-width: 900px)"
      > Modernizr detection class. e.g. opacity

  Example SCSS:
  -------------
  .block {
    width: 300px;
    @include when(small) { width: 100%; }
    opacity: 0;
    @include when(no-opacity) { display: none; }
    &--active {
      opacity: 1;
      @include when(no-opacity) { display: block; }
    }
  }
  
  
  Example HTML:
  -------------
  <div class="block block--active">
  </div>

  TODO:
  -----
  - Add support for 'or' breakpoints

*/

$global-feature-selectors: ();

$breakpoints: (
  'small' '(max-width: 749px)',
  'medium' '(min-width: 750px) and (max-width: 999px)',
  'large' '(min-width: 1000px) and (max-width: 1199px)',
  'extra-large' '(min-width: 1200px)'
)!default;

@mixin when($conditions) {
    $feature-selectors: ();
    $state-selectors: ();
    $media-queries: ();
    
    @for $n from 1 through length($conditions) {
      $not-found: true;
      $condition: nth($conditions, $n);
    
      // its a tween point
      @if str-slice($condition, 1, 1) == "(" {
        $not-found: false;
        $media-queries: append($media-queries, $condition);
      }

      // its a breakpoint
      @each $breakpoint in $breakpoints{
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);
        @if $condition == $name and $declaration{
          $not-found: false;
          $media-queries: append($media-queries, $declaration);
        }
      }

      // its a modernizr feature
      @if $not-found {
        @if not index($global-feature-selectors, $condition) {
          $global-feature-selectors: append($global-feature-selectors, $condition)!global;
        }
        $feature-selectors: append($feature-selectors, $condition);
      }
    }

    $feature-selector: to-string($feature-selectors, '.');
    $media-query: to-string($media-queries, ' and ');
    
    & {
      @if str-length($media-query) > 0 {
        @media only screen and #{$media-query} {
          @if str-length($feature-selector) > 0 {
            .#{$feature-selector} & {
              @content;
            }
          } @else {
            @content;
          }
        }
      } @else if str-length($feature-selector) > 0 {
        .#{$feature-selector} & {
          @content;
        }
      } @else {
        @content;
      }
    }
}